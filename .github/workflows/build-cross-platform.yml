name: Build GPMC on all platforms

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup vcpkg and dependencies (Windows only)
      if: runner.os == 'Windows'
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        runVcpkgInstall: true

    - name: Install GMP & MPFR
      shell: bash
      run: |
        if [ "${{ runner.os }}" = "Linux" ]; then
          sudo apt-get update -y
          sudo apt-get install -y libgmp-dev libmpfr-dev
          echo "EXTRA_CXX_FLAGS=-I/usr/include" >> $GITHUB_ENV
          echo "EXTRA_LINK_FLAGS=-L/usr/lib" >> $GITHUB_ENV

        elif [ "${{ runner.os }}" = "macOS" ]; then
          brew install gmp mpfr
          BREW_PREFIX=$(brew --prefix)
          echo "EXTRA_CXX_FLAGS=-I$BREW_PREFIX/include" >> $GITHUB_ENV
          echo "EXTRA_LINK_FLAGS=-L$BREW_PREFIX/lib" >> $GITHUB_ENV

        # else  # Windows
        #   if [ ! -d "vcpkg" ]; then
        #     git clone https://github.com/microsoft/vcpkg.git --depth 1
        #   fi
        #   ./vcpkg/bootstrap-vcpkg.bat
        #   ./vcpkg/vcpkg install gmp mpfr --triplet x64-windows-static
        #   echo "CMAKE_TOOLCHAIN_FILE=$PWD/vcpkg/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV
        fi

    - name: Configure CMake
      shell: bash
      run: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release \
          ${CMAKE_TOOLCHAIN_FILE:+-DCMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE} \
          -DCMAKE_CXX_FLAGS="${EXTRA_CXX_FLAGS}" \
          -DCMAKE_EXE_LINKER_FLAGS="${EXTRA_LINK_FLAGS}"

    - name: Build
      run: cmake --build build --config Release --parallel

    - name: Set binary path by OS
      id: bin
      shell: bash
      run: |
        if [ "${{ runner.os }}" = "Windows" ]; then
          echo "path=build\\Release\\GPMC.exe" >> "$GITHUB_OUTPUT"
        else
          if [ "$(uname)" = "Darwin" ]; then
            echo "path=build/GPMC" >> "$GITHUB_OUTPUT"
          else
            echo "path=build/gpmc" >> "$GITHUB_OUTPUT"
          fi
        fi

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: gpmc-${{ runner.os }}-${{ runner.arch }}
        path: ${{ steps.bin.outputs.path }}
